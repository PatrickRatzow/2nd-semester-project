<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2140</x>
      <y>4220</y>
      <w>450</w>
      <h>630</h>
    </coordinates>
    <panel_attributes>controller::ProjectController
--
-project: Project
-orderController: OrderController
-onFindListeners = new LinkedList(): List&lt;Consumer&lt;List&lt;Project&gt;&gt;&gt;
-onFindFullListeners = new LinkedList(): List&lt;Consumer&lt;Project&gt;&gt;
-onSaveListeners = new LinkedList(): List&lt;Consumer&lt;Project&gt;&gt;
--
+ProjectController(): ctor
+ProjectController(Project project): ctor
+setOrderController(OrderController orderController): void
+getOrderController(): OrderController
+setCustomer(Customer customer): void
+getCustomer(): Customer
+setLeadEmployee(Employee employee): void
+getLeadEmployee(): Employee
+setPrice(Price price): void
+setPrice(int price): void
+getPrice(): Price
+setStatus(ProjectStatus status): void
+getStatus(): ProjectStatus
+setName(String name): void
+getName(): String
+setEstimatedHours(int hours): void
+getEstimatedHours(): int
+addFindListener(Consumer&lt;List&lt;Project&gt;&gt; listener): void
+addFindProjectListener(Consumer&lt;Project&gt; listener): void
+addSaveListener(Consumer&lt;Project&gt; listener): void
-findById(int id): Project
+save(): void
-create(): void
-update(): void
+getFullProject(Project project): void
+getAll(): void
+getSearchByName(String name): void
-findAll(): List&lt;Project&gt;
-findByName(String name, boolean fullAssociation): List&lt;Project&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3230</x>
      <y>5000</y>
      <w>900</w>
      <h>530</h>
    </coordinates>
    <panel_attributes>model::Project
--
-id: int
-name: String
-order: Order
-employee: Employee
-price: Price
-estimatedHours: int
-status: ProjectStatus
-customer: Customer
--
+Project(): ctor
+Project(int id, String name): ctor
+Project(int id, String name, Order order, Employee employee, Price price, int estimatedHours, ProjectStatus status, Customer customer): ctor
+getName(): String
+setName(String name): void
+getId(): int
+setId(int id): void
+getOrder(): Order
+setOrder(Order order): void
+getEmployee(): Employee
+setEmployee(Employee employee): void
+getPrice(): Price
+setPrice(Price price): void
+getEstimatedHours(): int
+setEstimatedHours(int estimatedHours): void
+getStatus(): ProjectStatus
+setStatus(ProjectStatus status): void
+getCustomer(): Customer
+setCustomer(Customer customer): void
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3270</x>
      <y>3980</y>
      <w>510</w>
      <h>410</h>
    </coordinates>
    <panel_attributes>SpecificationController
--
-displayId: int
-displayName: String
-resultAmount: int
-specification: Specification
-onSaveListeners = new LinkedList(): List&lt;Consumer&lt;SpecificationController&gt;&gt;
-onErrorListeners = new LinkedList(): List&lt;Consumer&lt;Exception&gt;&gt;
--
+SpecificationController(Specification specification): ctor
+getRequirements(): List&lt;Requirement&gt;
+setRequirements(List&lt;Requirement&gt; requirements): void
+addSaveListener(Consumer&lt;SpecificationController&gt; listener): void
+removeAllSaveListeners(): void
+addErrorListener(Consumer&lt;Exception&gt; listener): void
+save(): void
+setDisplayName(String name): void
+getDisplayName(): String
+getName(): String
+setResultAmount(int amount): void
+getResultAmount(): int
+getSpecification(): Specification
+getDisplayId(): int
+setDisplayId(int displayId): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4920</x>
      <y>4880</y>
      <w>900</w>
      <h>400</h>
    </coordinates>
    <panel_attributes>dao.mssql::ProjectDaoMsSql
--
-FIND_ALL_Q = "SELECT * FROM project": String
-findAllPS: PreparedStatement
-FIND_BY_NAME_Q = FIND_ALL_Q + " WHERE name LIKE CONCAT('%', ?, '%')": String
-findByNamePS: PreparedStatement
-FIND_BY_ID_Q = FIND_ALL_Q + " WHERE id = ?": String
-findByIdPS: PreparedStatement
-INSERT_Q = " INSERT INTO project(name, status, price, estimated_hours, customer_id," + " employee_id) VALUES (?, ?, ?, ?, ?, ?)": String
-insertPS: PreparedStatement
-UPDATE_Q = " UPDATE project SET name = ?, status = ?, price = ?, " + "estimated_hours = ?, employee_id = ? " + "WHERE id = ?": String
-updatePS: PreparedStatement
-connection: DBConnection
--
+ProjectDaoMsSql(DBConnection conn): ctor
-init(DBConnection conn): void
+findAll(boolean fullAssociation): List&lt;Project&gt;
+findByName(String name, boolean fullAssociation): List&lt;Project&gt;
+findById(int id, boolean fullAssociation): Project
+create(Project project): Project
+update(Project project): void
-buildObject(ResultSet rs, boolean fullAssociation): Project
-buildObjects(ResultSet rs, boolean fullAssociation): List&lt;Project&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5830</x>
      <y>4880</y>
      <w>740</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>dao.mssql::CustomerDaoMsSql
--
-FIND_ALL_Q = "SELECT * FROM view_customer": String
-findAllPS: PreparedStatement
-FIND_BY_PHONE_NUMBER_OR_EMAIL_Q = FIND_ALL_Q + " WHERE phone_number = ? OR email = ?": String
-findByPhoneNumberOrEmailPS: PreparedStatement
-FIND_ID_Q = "SELECT * FROM view_customer WHERE id = ?": String
-findIdPS: PreparedStatement
-INSERT_Q = "{CALL InsertCustomer(?, ?, ?, ?, ?, ?, ?, ?, ?)}": String
-insertPC: CallableStatement
-UPDATE_Q = "{CALL UpdateCustomer(?, ?, ?, ?, ?, ?, ?, ?, ?)}": String
-updatePC: CallableStatement
--
+CustomerDaoMsSql(DBConnection conn): ctor
-init(DBConnection conn): void
-buildObject(ResultSet rs): Customer
-buildObjects(ResultSet rs): List&lt;Customer&gt;
+findAll(): List&lt;Customer&gt;
+findByPhoneNumberOrEmail(String phoneNumber, String email): List&lt;Customer&gt;
+findById(int id): Customer
+create(Customer customer): Customer
+update(Customer customer): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6580</x>
      <y>4880</y>
      <w>380</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>model::Product
--
-id: int
-name: String
-desc: String
-price: Price
-fields = new HashMap(): Map&lt;String, Object&gt;
--
+Product(): ctor
+Product(String name, String desc, Price price): ctor
+Product(int id, String name, String desc, Price price): ctor
+getId(): int
+setId(int id): void
+setField(String key, Object value): void
+getFields(): Map&lt;String, Object&gt;
+getName(): String
+setName(String name): void
+getDesc(): String
+setDesc(String desc): void
+getPrice(): Price
+setPrice(Price price): void
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6970</x>
      <y>4880</y>
      <w>640</w>
      <h>360</h>
    </coordinates>
    <panel_attributes>datasource.mssql::DBConnectionMsSql
--
-connection: Connection
-driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver": String
-onRelease: Runnable
-factory: DaoFactory
--
+DBConnectionMsSql(String host, int port, String username, String password, String database): ctor
+startTransaction(): void
+setSavepoint(): Savepoint
+commitTransaction(): void
+rollbackTransaction(): void
+rollbackTransaction(Savepoint savepoint): void
+getConnection(): Connection
+prepareStatement(String sql): PreparedStatement
+prepareCall(String sql): CallableStatement
+prepareStatement(String sql, int autoGeneratedKeys): PreparedStatement
+disconnect(): void
+setOnRelease(Runnable runnable): void
+release(): void
+getDaoFactory(): DaoFactory
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5150</x>
      <y>4200</y>
      <w>1130</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>CustomerController
--
-customer: Customer
-onFindListeners = new LinkedList(): List&lt;Consumer&lt;List&lt;Customer&gt;&gt;&gt;
-onSaveListeners = new LinkedList(): List&lt;Consumer&lt;Customer&gt;&gt;
-onErrorListeners = new LinkedList(): List&lt;Consumer&lt;Exception&gt;&gt;
--
+addFindListener(Consumer&lt;List&lt;Customer&gt;&gt; consumer): void
+addSaveListener(Consumer&lt;Customer&gt; consumer): void
+addErrorListener(Consumer&lt;Exception&gt; error): void
+getAll(): void
+getSearch(String search): void
-findAll(): List&lt;Customer&gt;
-findByPhoneNumberOrEmail(String search): List&lt;Customer&gt;
+setCustomerInformation(int id, String firstName, String lastName, String email, String phoneNumber, String city, String streetName, String streetNumber, String zipCode): boolean
+setCustomerInformation(String firstName, String lastName, String email, String phoneNumber, String city, String streetName, String streetNumber, String zipCode): boolean
+setCustomer(Customer customer): void
+save(): void
-create(): void
-update(): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4170</x>
      <y>5520</y>
      <w>640</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>gui.components.specifications.specification::SpecificationTab
--
-panelManager: PanelManager
-previousId: String
-specificationController: SpecificationController
-nameColumn: SpecificationColumn
-amountColumn: SpecificationColumn
-columns: Map&lt;Requirement, SpecificationColumn&gt;
-widthContainer: JPanel
-requirements: List&lt;Requirement&gt;
--
+SpecificationTab(PanelManager panelManager, SpecificationController specificationController): ctor
-createError(Exception error): void
-saveSpecification(): void
-createDynamicFieldsFromRequirements(): void
+fillColumnsWithRequirementValues(): void
-createSpecificationColumns(): void
-createRequirementColumn(Requirement&lt;?&gt; requirement): SpecificationColumn
-createSpecificationColumn(String displayValue): SpecificationColumn
-createSpacer(): Component
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4820</x>
      <y>5520</y>
      <w>490</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>model::Address
--
-streetName: String
-streetNumber: int
-city: String
-zipCode: int
--
+Address(): ctor
+Address(String streetName, int streetNumber, String city, int zipCode): ctor
+validate(): void
+getStreetName(): String
+setStreetName(String streetName): void
+getStreetNumber(): int
+setStreetNumber(int streetNumber): void
+getCity(): String
+setCity(String city): void
+getZipCode(): int
+setZipCode(int zipCode): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5320</x>
      <y>5520</y>
      <w>620</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>model::Order
--
-id: int
-date: LocalDateTime
-delivered: boolean
-orderLines: Map&lt;Integer, OrderLine&gt;
--
+Order(): ctor
+Order(int id, LocalDateTime date, boolean delivered): ctor
+Order(int id, LocalDateTime date, boolean delivered, Map&lt;Integer, OrderLine&gt; orderLines): ctor
+getOrderLines(): Map&lt;Integer, OrderLine&gt;
+addOrderLine(OrderLine orderLine): void
+getId(): int
+setId(int id): void
+getDate(): LocalDateTime
+setDate(LocalDateTime date): void
+isDelivered(): boolean
+setDelivered(boolean delivered): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5950</x>
      <y>5520</y>
      <w>360</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>/model::Person/
--
-id: int
-firstName: String
-lastName: String
--
+Person(): ctor
+Person(String firstName, String lastName): ctor
+Person(int id, String firstName, String lastName): ctor
+getFirstName(): String
+setFirstName(String firstName): void
+getLastName(): String
+setLastName(String lastName): void
+getId(): int
+setId(int id): void
+validate(): void
+equals(Object object): boolean
+hashCode(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5500</x>
      <y>3880</y>
      <w>530</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>SpecificationsController
--
-productController: ProductController
-onFindListeners = new LinkedList(): List&lt;Consumer&lt;List&lt;Specification&gt;&gt;&gt;
-onSaveListeners = new LinkedList(): List&lt;Consumer&lt;OrderController&gt;&gt;
-onErrorListeners = new LinkedList(): List&lt;Consumer&lt;Exception&gt;&gt;
-specificationControllers = new HashMap(): Map&lt;Integer, SpecificationController&gt;
--
+SpecificationsController(): ctor
+SpecificationsController(ProductController productController): ctor
+addFindListener(Consumer&lt;List&lt;Specification&gt;&gt; listener): void
+addSaveListener(Consumer&lt;OrderController&gt; listener): void
+addErrorListener(Consumer&lt;Exception&gt; listener): void
+addSpecificationController(SpecificationController specificationController): void
+getSpecificationControllers(): Collection&lt;SpecificationController&gt;
+getSpecifications(): void
+getProductsFromSpecifications(): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6860</x>
      <y>5520</y>
      <w>490</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
datasource::DBConnection
--
--
~startTransaction(): void
~setSavepoint(): Savepoint
~commitTransaction(): void
~rollbackTransaction(): void
~rollbackTransaction(Savepoint savepoint): void
~getConnection(): Connection
~prepareStatement(String sql): PreparedStatement
~prepareStatement(String sql, int autoGeneratedKeys): PreparedStatement
~prepareCall(String sql): CallableStatement
~disconnect(): void
~setOnRelease(Runnable runnable): void
~release(): void
~getDaoFactory(): DaoFactory
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3600</x>
      <y>5880</y>
      <w>700</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>model::Customer
--
-email: String
-phoneNumber: String
-address: Address
--
+Customer(): ctor
+Customer(int id, String firstName, String lastName, String email, String phoneNumber, Address address): ctor
+Customer(String firstName, String lastName, String email, String phoneNumber, Address address): ctor
+validate(): void
+getEmail(): String
+setEmail(String email): void
+getPhoneNumber(): String
+setPhoneNumber(String phoneNumber): void
+getAddress(): Address
+setAddress(Address address): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4810</x>
      <y>5880</y>
      <w>440</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>/gui.components.customer::ManipulateCustomer/
--
#firstName: ManipulateCustomerColumn
#address: ManipulateCustomerColumn
#city: ManipulateCustomerColumn
#phoneNumber: ManipulateCustomerColumn
#lastName: ManipulateCustomerColumn
#addressNumber: ManipulateCustomerColumn
#zipCode: ManipulateCustomerColumn
#email: ManipulateCustomerColumn
#customerController: CustomerController
#btnAdd: JButton
--
+ManipulateCustomer(CustomerController customerController): ctor
+onSave(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5630</x>
      <y>5880</y>
      <w>580</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>dao.mssql::EmployeeDaoMsSql
--
-FIND_BY_ID_Q = "SELECT * FROM view_employee WHERE id = ?": String
-findByIdPS: PreparedStatement
-FIND_BY_ROLE_Q = "SELECT * FROM view_employee WHERE role_name = ?": String
-findByRolePS: PreparedStatement
-connection: DBConnection
--
+EmployeeDaoMsSql(DBConnection conn): ctor
-init(DBConnection conn): void
-buildObject(ResultSet rs): Employee
-buildObjects(ResultSet rs): List&lt;Employee&gt;
+findById(int id): Employee
+findByRole(String role): List&lt;Employee&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6220</x>
      <y>5880</y>
      <w>710</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>dao.mssql::OrderDaoMsSql
--
-FIND_BY_ID_Q = "SELECT project_id, delivered, created_at FROM [order] " + "WHERE project_id = ?": String
-findByIdPS: PreparedStatement
-INSERT_Q = "INSERT INTO [order](project_id, delivered, created_at) " + "VALUES (?, ?, ?)": String
-insertPS: PreparedStatement
-connection: DBConnection
--
+OrderDaoMsSql(DBConnection conn): ctor
-init(DBConnection conn): void
-buildObject(final ResultSet rs, boolean fullAssociation): Order
-buildObjects(ResultSet rs, boolean fullAssociation): List&lt;Order&gt;
+findById(int id, boolean fullAssociation): Order
+create(Order order, Project project): Order
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6990</x>
      <y>5880</y>
      <w>830</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>dao.mssql::OrderLineDaoMsSql
--
-FIND_ALL_BY_ORDER_ID_Q = "SELECT quantity, product_id, display_name" + " FROM order_line WHERE order_id = ?": String
-findAllByOrderIdPS: PreparedStatement
-INSERT_Q = "INSERT INTO order_line(order_id, product_id, quantity, display_name)" + " VALUES (?, ?, ?, ?)": String
-insertPS: PreparedStatement
-connection: DBConnection
--
+OrderLineDaoMsSql(DBConnection conn): ctor
-init(DBConnection conn): void
-buildObject(ResultSet rs): Entry&lt;Integer, OrderLine&gt;
-buildObjects(ResultSet rs): Map&lt;Integer, OrderLine&gt;
+findByOrderId(int id): List&lt;OrderLine&gt;
+create(Order order, OrderLine orderLine): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>6170</y>
      <w>520</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>datasource.mssql::DBConnectionPoolMsSql
--
-POOL_SIZE = 15: int
-pool = new ArrayBlockingQueue(POOL_SIZE): BlockingQueue&lt;DBConnection&gt;
-user: String
-database: String
-host = "hildur.ucn.dk": String
-port = 1433: int
-password = "Password1!": String
--
+DBConnectionPoolMsSql(): ctor
-setupDatabase(): void
+getConnection(): DBConnection
-releaseConnection(DBConnection connection): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3960</x>
      <y>6170</y>
      <w>350</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>gui.components.core::TitleBar
--
-title: JLabel
-actionButton: JButton
#container: JPanel
-searchTextField: PlaceholderTextField
-searchContainer: JPanel
--
+TitleBar(): ctor
+setTitle(String titleName): void
+setButtonName(String buttonName): void
+addActionListener(ActionListener listener): void
+hideButton(): void
+createSearchBar(String placeholderText): JTextField
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4320</x>
      <y>6170</y>
      <w>430</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>model::OrderLine
--
-product: Product
-quantity: int
-displayName: String
--
+OrderLine(): ctor
+OrderLine(Product product, int quantity, String displayName): ctor
+getQuantity(): int
+setQuantity(int quantity): void
+getProduct(): Product
+setProduct(Product product): void
+getDisplayName(): String
+setDisplayName(String displayName): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5300</x>
      <y>6170</y>
      <w>670</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>gui.components.specifications::SpecificationsLists
--
-specificationsList: JPanel
-chosenSpecifications: JPanel
-panelManager: PanelManager
-chosenMap: Map&lt;Integer, Entry&lt;SpecificationController, SpecificationsSelectedRow&gt;&gt;
-specificationsController: SpecificationsController
--
+SpecificationsLists(PanelManager panelManager, SpecificationsController specificationsController): ctor
+setSpecifications(List&lt;Specification&gt; specifications): void
-createListRow(Specification specification, boolean even): Row
-getDisplayName(SpecificationController specController): String
-createChosenRow(SpecificationController specificationController): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5980</x>
      <y>6170</y>
      <w>280</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>/model::Requirement/
--
-value: T
--
+getName(): String
+getDescription(): String
+getId(): String
+getSQLKey(): String
+getSQLValue(): String
+setValueFromSQLValue(String sql): void
+getValue(): T
+setValue(T value): void
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4430</x>
      <y>4120</y>
      <w>440</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>OrderController
--
-order: Order
--
+OrderController(): ctor
+OrderController(Order order): ctor
+getOrderLines(): Collection&lt;OrderLine&gt;
+hasOrder(): boolean
+getPrice(): Price
+addProduct(Product product, int quantity, String displayName): void
+findById(int id, boolean fullAssociation): Order
+getOrder(): Order
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>6420</y>
      <w>450</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>datasource::DBManager
--
-instance: DBManager
-pool: DBConnectionPool
-dataSource: String
-factory: DaoFactory
--
-DBManager(): ctor
-loadSource(): void
+getPool(): DBConnectionPool
+getConnectionThread(Consumer&lt;DBConnection&gt; callback): Thread
+getInstance(): DBManager
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4450</x>
      <y>6420</y>
      <w>340</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>dao.mssql::DaoFactoryMsSql
--
-connection: DBConnection
--
+DaoFactoryMsSql(DBConnection connection): ctor
+createCustomerDao(): CustomerDao
+createEmployeeDao(): EmployeeDao
+createOrderDao(): OrderDao
+createOrderLineDao(): OrderLineDao
+createProductDao(): ProductDao
+createProjectDao(): ProjectDao
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4800</x>
      <y>6420</y>
      <w>460</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>gui.components.specifications.specification::SpecificationColumnColor
--
-component: JComboBox&lt;String&gt;
--
+SpecificationColumnColor(): ctor
+getValue(): String
+setValue(String value): void
+setOptions(Collection&lt;String&gt; options): void
+setValueAsString(String value): void
+getValueAsString(): String
+getComponent(): JComboBox&lt;String&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5270</x>
      <y>6420</y>
      <w>480</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>gui.components.specifications.specification::SpecificationColumnTextField
--
-component: JTextField
--
+SpecificationColumnTextField(): ctor
+getValue(): String
+setValue(String value): void
+setOptions(Void options): void
+setValueAsString(String value): void
+getValueAsString(): String
+getComponent(): JTextField
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6530</x>
      <y>6420</y>
      <w>200</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>model::Price
--
-amount: int
--
+Price(): ctor
+Price(int amount): ctor
+getAmount(): int
+setAmount(int amount): void
+getNumberString(): String
+toString(): String
+compareTo(Price price): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>6640</y>
      <w>300</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>util.validation::Validator
--
~errors = new Stack(): Stack&lt;Exception&gt;
--
+addRule(ValidationRule&lt;?&gt; rule): void
+addException(Exception exception): void
+addValidatable(Validatable validatable): void
+hasErrors(): boolean
+getErrors(): Collection&lt;Exception&gt;
+getCompositeException(): Exception
+addError(String error): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3340</x>
      <y>6640</y>
      <w>260</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::DaoFactory
--
--
~createCustomerDao(): CustomerDao
~createEmployeeDao(): EmployeeDao
~createOrderDao(): OrderDao
~createOrderLineDao(): OrderLineDao
~createProductDao(): ProductDao
~createProjectDao(): ProjectDao
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3610</x>
      <y>6640</y>
      <w>610</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>gui.components.specifications.specification::SpecificationColumn
--
-valueField: SpecificationColumnValueField&lt;?, ?, ?&gt;
-titleName: JLabel
--
+SpecificationColumn(String titleText, SpecificationColumnValueField&lt;?, ?, ?&gt; valueField): ctor
+setTitleName(String name): void
+getTitleName(): JLabel
+setStringValue(String value): void
+getStringValue(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4230</x>
      <y>6640</y>
      <w>490</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
gui.components.specifications.specification::SpecificationColumnValueField
--
--
~getValue(): T
~setValue(T value): void
~setOptions(Z options): void
~setValueAsString(String value): void
~getValueAsString(): String
~getComponent(): Y
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5490</x>
      <y>6640</y>
      <w>450</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>model::Employee
--
-role: String
--
+Employee(): ctor
+Employee(String firstName, String lastName): ctor
+Employee(int id, String firstName, String lastName): ctor
+Employee(int id, String firstName, String lastName, String role): ctor
+getRole(): String
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5950</x>
      <y>6640</y>
      <w>220</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>model::ProjectStatus
--
+ON_HOLD = 0: int
+IN_PROGRESS = 1: int
+AWAITING_PAYMENT = 2: int
+FINISHED = 3: int
-value: int
--
~ProjectStatus(int value): ctor
+getValue(): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6180</x>
      <y>6640</y>
      <w>280</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>model.requirements::RequirementColor
--
--
+getName(): String
+getDescription(): String
+getId(): String
+getSQLKey(): String
+getSQLValue(): String
+setValueFromSQLValue(String sql): void
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6470</x>
      <y>6640</y>
      <w>270</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>model.requirements::RequirementHeight
--
--
+getName(): String
+getDescription(): String
+getId(): String
+getSQLKey(): String
+getSQLValue(): String
+setValueFromSQLValue(String sql): void
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6750</x>
      <y>6640</y>
      <w>280</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>model.requirements::RequirementWidth
--
--
+getName(): String
+getDescription(): String
+getId(): String
+getSQLKey(): String
+getSQLValue(): String
+setValueFromSQLValue(String sql): void
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>6840</y>
      <w>380</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>/model::Specification/
--
-requirements: List&lt;Requirement&gt;
--
+clone(): Specification
+getId(): String
+getName(): String
+validate(): void
+getRequirements(): List&lt;Requirement&gt;
+setRequirements(List&lt;Requirement&gt; requirements): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4450</x>
      <y>6840</y>
      <w>350</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>/util.validation::ValidationRule/
--
-errorReplacement: String
-rule: T
--
+ValidationRule(T rule): ctor
+ValidationRule(T rule, String errorReplacement): ctor
#createException(String error): Exception
-getErrorMessage(String error): String
+getRule(): T
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4810</x>
      <y>6840</y>
      <w>530</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::CustomerDao
--
--
~findAll(): List&lt;Customer&gt;
~findByPhoneNumberOrEmail(String phoneNumber, String email): List&lt;Customer&gt;
~findById(int id): Customer
~update(Customer customer): void
~create(Customer customer): Customer
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5350</x>
      <y>6840</y>
      <w>370</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>dao.mssql::ProductDaoMsSql
--
-connection: DBConnection
--
+ProductDaoMsSql(DBConnection conn): ctor
-buildObject(ResultSet rs): Product
-buildObjects(ResultSet rs): List&lt;Product&gt;
+findBySpecification(Specification specification): Product
+findByIds(List&lt;Integer&gt; ids): List&lt;Product&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5730</x>
      <y>6840</y>
      <w>430</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::ProjectDao
--
--
~findAll(boolean fullAssociation): List&lt;Project&gt;
~findByName(String name, boolean fullAssociation): List&lt;Project&gt;
~findById(int id, boolean fullAssociation): Project
~create(Project project): Project
~update(Project project): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>7030</y>
      <w>210</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>util::Config
--
+properties: Properties
+instance: Config
--
-Config(): ctor
+getInstance(): Config
+getProperties(): Properties
+getProperty(String key): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3250</x>
      <y>7030</y>
      <w>290</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>gui.components.core::PlaceholderTextField
--
-placeholder: String
--
+PlaceholderTextField(): ctor
+setPlaceholder(String text): void
+getPlaceholder(): String
#paintComponent(final Graphics pG): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4210</x>
      <y>7030</y>
      <w>580</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>util.validation.rules::IntegerRangeValidationRule
--
-min: int
-max: int
--
+IntegerRangeValidationRule(Integer rule, int min, int max): ctor
+IntegerRangeValidationRule(Integer rule, String errorReplacement, int min, int max): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6300</x>
      <y>7030</y>
      <w>180</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>model.specifications::Roof
--
--
+Roof(): ctor
+clone(): Specification
+getId(): String
+getName(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6490</x>
      <y>7030</y>
      <w>200</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>model.specifications::Window
--
--
+Window(): ctor
+clone(): Specification
+getId(): String
+getName(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6700</x>
      <y>7030</y>
      <w>460</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>util.validation.rules::EmailValidationRule
--
- emailPattern: Pattern
--
+ EmailValidationRule(String rule): ctor
+ EmailValidationRule(String rule, String errorReplacement): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>7200</y>
      <w>540</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>util.validation.rules::IntegerMinimumValidationRule
--
-min: int
--
+IntegerMinimumValidationRule(Integer rule, int min): ctor
+IntegerMinimumValidationRule(Integer rule, String errorReplacement, int min): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2650</x>
      <y>4310</y>
      <w>470</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>EmployeeController
--
-onFindListeners = new LinkedList(): List&lt;Consumer&lt;List&lt;Employee&gt;&gt;&gt;
--
+addFindListener(Consumer&lt;List&lt;Employee&gt;&gt; listener): void
+getDirectors(): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4060</x>
      <y>7200</y>
      <w>280</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::EmployeeDao
--
--
~findById(int id): Employee
~findByRole(String role): List&lt;Employee&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4350</x>
      <y>7200</y>
      <w>310</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::OrderDao
--
--
~findById(int id, boolean fullAssociation): Order
~create(Order order, Project project): Order
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4670</x>
      <y>7200</y>
      <w>310</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::OrderLineDao
--
--
~findByOrderId(int id): List&lt;OrderLine&gt;
~create(Order order, OrderLine orderLine): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4990</x>
      <y>7200</y>
      <w>370</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dao::ProductDao
--
--
~findByIds(List&lt;Integer&gt; ids): List&lt;Product&gt;
~findBySpecification(Specification specification): Product
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5370</x>
      <y>7200</y>
      <w>450</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>gui.components.specifications::SpecificationsSelectedRow
--
-removeBtn: JButton
--
+SpecificationsSelectedRow(String displayName, boolean even): ctor
+addRemoveButtonActionListener(ActionListener listener): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5830</x>
      <y>7200</y>
      <w>470</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>util::SQLDateConverter
--
--
+localDateTimeToTimestamp(final LocalDateTime dateTime): Timestamp
+timestampToLocalDateTime(final Timestamp timestamp): LocalDateTime
+localDateToDate(final LocalDate localDate): Date
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6310</x>
      <y>7200</y>
      <w>420</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>util.validation.rules::EmptyValidationRule
--
--
+EmptyValidationRule(String rule): ctor
+EmptyValidationRule(String rule, String errorReplacement): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6740</x>
      <y>7200</y>
      <w>400</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>util.validation.rules::NotNullValidationRule
--
--
+NotNullValidationRule(T rule): ctor
+NotNullValidationRule(T rule, String errorReplacement): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>7330</y>
      <w>420</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>util.validation.rules::PhoneValidationRule
--
--
+PhoneValidationRule(String rule): ctor
+PhoneValidationRule(String rule, String errorReplacement): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3460</x>
      <y>7330</y>
      <w>440</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>util.validation.rules::StringToIntegerValidationRule
--
--
+StringToIntegerValidationRule(String rule): ctor
+StringToIntegerValidationRule(String rule, String replacement): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3910</x>
      <y>7330</y>
      <w>440</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>util.validation.rules::ZipCodeValidationRule
--
--
+ZipCodeValidationRule(Integer rule): ctor
+ZipCodeValidationRule(Integer rule, String errorReplacement): ctor
+validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4360</x>
      <y>7330</y>
      <w>210</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
datasource::DBConnectionPool
--
--
~getConnection(): DBConnection
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4990</x>
      <y>7330</y>
      <w>530</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>gui.components.specifications.specification::SpecificationColumnValueFieldFactory
--
-checks = new LinkedList(): List&lt;ValueFieldCheck&gt;
--
+create(Requirement requirement): SpecificationColumnValueField&lt;?, ?, ?&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6140</x>
      <y>7330</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
util.validation::Validatable
--
--
~validate(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3470</x>
      <y>4610</y>
      <w>600</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ProductController
--
--
+getBySpecification(Specification specification, Consumer&lt;Product&gt; productConsumer): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6940</x>
      <y>7330</y>
      <w>270</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>datasource::DataAccessException
--
--
+DataAccessException(String msg): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3030</x>
      <y>7450</y>
      <w>570</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>gui.components.product::ProductRow
--
--
+ProductRow(String productName, String displayName, String price, boolean even): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5010</x>
      <y>7530</y>
      <w>170</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>util::Converter
--
--
+tryParse(String text): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5190</x>
      <y>7530</y>
      <w>160</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>util::JUnit
--
--
+isJUnitTest(): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5730</x>
      <y>820</y>
      <w>380</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Frame
--
- tabbedPane: JTabbedPane
_- frame: Frame_
--
- &lt;&lt;constructor&gt;&gt;()
_+ createFrame()_
_+ createSuccessPopup(message: String)_
_+ createErrorPopup(error: Exception)_
- createTab(name: String, tabClass: Class&lt;? extends Tab&gt;)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6170</x>
      <y>820</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>/Tab/
--
# panelManager: PanelManager
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6100</x>
      <y>850</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6170</x>
      <y>1030</y>
      <w>310</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>ProductFinderUI
-
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6110</x>
      <y>1150</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ProductFinderResultUI
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    orderController: OrderController)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6330</x>
      <y>880</y>
      <w>30</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6250</x>
      <y>1050</y>
      <w>50</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=0..1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6690</x>
      <y>820</y>
      <w>490</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>PanelManager
--
- components: Map&lt;String, JComponent&gt;
- currentId: String
- previousId: String
--
+ &lt;&lt;constructor&gt;&gt;()
+ removePanel(id: String)
+ setActive(id: String, panelCreation: Callable&lt;? extends JComponent&gt;)
+ getCurrentId(): String
+ getPreviousId(): String
+ setActive(id: String)
+ setActiveAndRemoveCurrent(id: String)
+ setActiveAndRemoveEverythingElse(id: String)
- addPanel(id: String, component: JComponent)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6470</x>
      <y>850</y>
      <w>240</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6470</x>
      <y>1040</y>
      <w>240</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5800</x>
      <y>210</y>
      <w>330</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Colors
--
_+ PRIMARY = Color(205, 205, 205)_
_+ SECONDARY = Color(225, 225, 225)_
_+ GREEN = Color(152, 251, 152)_
_+ RED = Color(252, 92, 101)_
- color: Color
--
- &lt;&lt;constructor&gt;&gt;(color: Color)
+ getColor(): Color
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5760</x>
      <y>1110</y>
      <w>310</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ProjectsUI
--
- projectController: ProjectController
- panel: JPanel
--
- createRow(project: Project)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5790</x>
      <y>1330</y>
      <w>270</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>ProjectRowUI
--
- iconLbl: JLabel
- icon: ImageIcon
--
+ setCompleted(completed: boolean)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5910</x>
      <y>880</y>
      <w>430</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>410.0;10.0;410.0;130.0;10.0;130.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2360</x>
      <y>5730</y>
      <w>280</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>gui.components.core::BackgroundTitle
--
-titleLabel: JLabel
-container: JPanel
-titleContainer: JPanel
--
+BackgroundTitle(): ctor
+BackgroundTitle(String titleText): ctor
+setTitleBorder(Border border): void
+setContainerBorder(Border border): void
+setTitle(String text): void
+add(Component component): Component
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2290</x>
      <y>6060</y>
      <w>390</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>gui.components.core::Row
--
#title: JLabel
#mainButton: JButton
#rightContainer: JPanel
#leftContainer: JPanel
--
+Row(): ctor
+Row(boolean even): ctor
+Row(String titleText, String buttonText, boolean even): ctor
+setTitleText(String text): void
+setButtonText(String text): void
+removeAllActionListeners(): void
+addActionListener(ActionListener listener): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4430</x>
      <y>380</y>
      <w>360</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>TitleBar
--
- title: JLabel
- actionButton: JButton
# container: JPanel
- searchTextField: PlaceholderTextField
- searchContainer: JPanel
--
+ &lt;&lt;constructor&gt;&gt;()
+ setTitle(titleName: String)
+ setButtonName(buttonName: String)
+ addActionListener(listener: ActionListener)
+ hideButton()
+ createSearchBar(placeholderText: String): JTextField
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5920</x>
      <y>1190</y>
      <w>50</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=0..*
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5290</x>
      <y>740</y>
      <w>390</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>RowUI
--
# title: JLabel
# mainButton: JButton
# rightContainer: JPanel
# leftContainer: JPanel
--
+ &lt;&lt;constructor&gt;&gt;()
+ &lt;&lt;constructor&gt;&gt;(even: boolean)
+ &lt;&lt;constructor&gt;&gt;(titleText: String, buttonText: String, 
    even: boolean)
+ setTitleText(text: String)
+ setButtonText(text: String)
+ removeAllActionListeners()
+ addActionListener(listener: ActionListener)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4660</x>
      <y>60</y>
      <w>280</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>BackgroundTitle
--
- titleLabel: JLabel
- container: JPanel
- titleContainer: JPanel
--
+ BackgroundTitle(): ctor
+ BackgroundTitle(String titleText): ctor
+ setTitleBorder(Border border): void
+ setContainerBorder(Border border): void
+ setTitle(String text): void
+ add(Component component): Component
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5480</x>
      <y>970</y>
      <w>440</w>
      <h>380</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;250.0;40.0;250.0;310.0;420.0;310.0;420.0;360.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4900</x>
      <y>1110</y>
      <w>350</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>CustomersUI
--
- customerController: CustomerController
- container: JPanel
- currentId: String
- rows: Map&lt;Customer, RowUI&gt;
--
- addRowListener(customer: Customer, row: RowUI)
- createRow(customer: Customer)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5070</x>
      <y>880</y>
      <w>1250</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1230.0;10.0;1230.0;110.0;1070.0;110.0;1070.0;160.0;10.0;160.0;10.0;230.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5770</x>
      <y>1500</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ProjectViewUI
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    projectController: ProjectController)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5770</x>
      <y>1640</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ProjectOverviewUI
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    projectController: ProjectController)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5920</x>
      <y>1410</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1
m2=1
</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5920</x>
      <y>1560</y>
      <w>40</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5380</x>
      <y>1790</y>
      <w>360</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>CustomerInformationBoxUI
--
- panel: JPanel
--
+ &lt;&lt;constructor&gt;&gt;(customer: Customer)
- createRow(titleText: String, bodyText: String): JPanel
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6120</x>
      <y>1790</y>
      <w>370</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>ProductsBoxUI
--
- priceContainer: BackgroundTitleUI
- container: JPanel
--
+ &lt;&lt;constructor&gt;&gt;(orderController: OrderController)
+ setPriceBackground(color: Color)
+ setPrice(price: Price)
+ setOrderLines(orderLines: Collection&lt;OrderLine&gt;)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5760</x>
      <y>1790</y>
      <w>340</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>ProjectDetailsUI
--
- leftContainer: JPanel
- rightContainer: JPanel
- name: PlaceholderTextField
- price: PlaceholderTextField
- estimatedHours: PlaceholderTextField
- employeeBox: JComboBox&lt;Employee&gt;
- statusBox: JComboBox&lt;ProjectStatus&gt;
- projectController: ProjectController
- isCreatingProject: boolean
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    projectController: ProjectController)
+ setProject()
- createSpacer()
- createRow(title: String, component: JComponent)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5920</x>
      <y>1700</y>
      <w>40</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5960</x>
      <y>1700</y>
      <w>370</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;340.0;60.0;340.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5550</x>
      <y>1700</y>
      <w>370</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=1
</panel_attributes>
    <additional_attributes>340.0;10.0;340.0;60.0;10.0;60.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5330</x>
      <y>1470</y>
      <w>320</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>ProjectFindOrCreateCustomerUI
--
- searchTextField: PlaceholderTextField
- resultComponent: JComponent
- btnAddCustomer: JButton
- resultContainer: JPanel
- customer: Customer
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    projectController: ProjectController)
- createCustomerDisplay(customer: Customer)
- createNoResultDisplay()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3560</x>
      <y>1510</y>
      <w>360</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>ManipulateCustomerColumnUI
--
-content: PlaceholderTextField
-title: JLabel
--
+ManipulateCustomerColumn(String titleText): ctor
+setTitleText(String text): void
+setContentText(String text): void
+getContentText(): String
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4650</x>
      <y>1690</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ProjectCreateCustomerTabUI
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    customerController: CustomerController)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4490</x>
      <y>1500</y>
      <w>380</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>UpdateCustomerUI
--
- customerId: int
--
+ &lt;&lt;constructor&gt;&gt;(customerController: CustomerController, 
    customer: Customer)
- setCustomer(customer: Customer)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4010</x>
      <y>1500</y>
      <w>430</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>/ManipulateCustomerUI/
--
# firstName: ManipulateCustomerColumn
# address: ManipulateCustomerColumn
# city: ManipulateCustomerColumn
# phoneNumber: ManipulateCustomerColumn
# lastName: ManipulateCustomerColumn
# addressNumber: ManipulateCustomerColumn
# zipCode: ManipulateCustomerColumn
# email: ManipulateCustomerColumn
# customerController: CustomerController
# btnAdd: JButton
--
+ &lt;&lt;constructor&gt;&gt;(customerController: CustomerController)
+ onSave()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3910</x>
      <y>1580</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1..*</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4430</x>
      <y>1540</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4810</x>
      <y>1530</y>
      <w>230</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>200.0;10.0;200.0;40.0;90.0;40.0;90.0;90.0;10.0;90.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5020</x>
      <y>1330</y>
      <w>330</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>CreateCustomerTab
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    customerController: CustomerController, 
    title: String, buttonName: String)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4580</x>
      <y>1330</y>
      <w>380</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>UpdateCustomerTab
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
    customerController: CustomerController, 
    title: String, buttonName: String, customer: Customer)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4900</x>
      <y>1500</y>
      <w>210</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>CreateCustomerUI
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4220</x>
      <y>1460</y>
      <w>800</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0;780.0;10.0;780.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4920</x>
      <y>1600</y>
      <w>430</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1
m2=1
</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0;410.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5170</x>
      <y>1240</y>
      <w>50</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1
m2=1
</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4760</x>
      <y>1170</y>
      <w>160</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1
m2=1
</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0;140.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>4680</x>
      <y>1420</y>
      <w>40</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5040</x>
      <y>1420</y>
      <w>40</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>5000</x>
      <y>1790</y>
      <w>310</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ProjectSpecificationsTab
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager, 
   projectController: ProjectController)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>600</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>gui.tabs.project::ProjectOverviewTab
--
--
+ProjectOverviewTab(PanelManager panelManager, ProjectController projectController): ctor
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5150</x>
      <y>1650</y>
      <w>370</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=0..1
m2=1
</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;70.0;340.0;70.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5480</x>
      <y>1190</y>
      <w>450</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
m1=1
m2=0..1
</panel_attributes>
    <additional_attributes>420.0;10.0;420.0;70.0;10.0;70.0;10.0;280.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6460</x>
      <y>1150</y>
      <w>400</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>SpecificationsTab
--
- panelManager: PanelManager
- specificationsController: SpecificationsController
- continueBtn: JButton
--
+ &lt;&lt;constructor&gt;&gt;(panelManager: PanelManager)
- createError(error: Exception)
- createSpecificationsLists()
- continueToNextTab()
+ addSaveListener(listener: Consumer&lt;OrderController&gt;)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>6410</x>
      <y>1050</y>
      <w>280</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;250.0;60.0;250.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>5140</x>
      <y>1240</y>
      <w>1390</w>
      <h>870</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>1320.0;10.0;1230.0;10.0;1230.0;530.0;1370.0;530.0;1370.0;720.0;990.0;720.0;990.0;850.0;580.0;850.0;580.0;680.0;10.0;680.0;10.0;620.0</additional_attributes>
  </element>
</diagram>
